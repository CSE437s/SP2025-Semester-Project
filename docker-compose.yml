name: seat-sleuth
services:
  health-check:
    container_name: health
    image: busybox
    restart: 'no'
    stop_grace_period: 0s
    depends_on:
      postgres:
        condition: service_healthy
      server:
        condition: service_healthy
      client:
        condition: service_healthy
    command: ['/bin/sh', '-c', "until nc -z server 4000 && nc -z client 5173 && nc -z database 5432; do sleep 1; done; echo 'âœ… All services are healthy!'"]

  postgres:
    image: postgres:15
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: seat-sleuth-user
      POSTGRES_PASSWORD: seat-sleuth-password-12345
      POSTGRES_DB: seat-sleuth
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U seat-sleuth-user -d seat-sleuth']
      interval: 1s
      retries: 10
  client:
    container_name: client
    build:
      context: ./seat-sleuth-client
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    volumes:
      - ./seat-sleuth-client:/app
      - node_modules_client:/app/node_modules
      - ./seat-sleuth-server/src/types/shared:/app/src/shared
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_HOST=0.0.0.0
      - VITE_API_BASE_URL=http://localhost:4000/api/
    command: sh -c "npm run dev"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5173']
      interval: 1s
      retries: 10

  server:
    container_name: server
    build:
      context: ./seat-sleuth-server
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://seat-sleuth-user:seat-sleuth-password-12345@postgres:5432/seat-sleuth
      - NODE_ENV=development
      - JWT_SECRET=JZzG7L8tSgLVOkPiZ+ftMJvB4hrwF9vC1MmTXLTrSg1WJYhr5qkZW2+8v6d/5mVZb1Sx8H0qMAtu8d5PVo3C3A==
      - CLIENT_URL=http://localhost:5173
    ports:
      - '4000:4000'
      - '5555:5555'
    volumes:
      - ./seat-sleuth-server:/app
      - node_modules_server:/app/node_modules
    command: sh -c "npx prisma migrate deploy && sleep 1 && npm run dev"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/api/health']
      interval: 1s
      retries: 10

volumes:
  postgres_data:
    name: seat-sleuth-postgres-data
  node_modules_client:
    name: seat-sleuth-client
  node_modules_server:
    name: seat-sleuth-server
