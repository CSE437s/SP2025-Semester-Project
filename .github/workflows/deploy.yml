name: Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - production

# Concurrency group name ensures concurrent workflow runs wait for any in-progress job to finish
concurrency:
  group: merge-${{ github.ref }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851725546513:role/GitHub
          role-duration-seconds: 1800
          aws-region: us-east-1
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: ConnectAlum/ec2-github-runner@v3.0.1
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0f15ce2b4183af4b1
          ec2-instance-type: t4g.2xlarge
          subnet-id: subnet-0a562910421641877
          security-group-id: sg-05139d991d3b74815
          runner-version: "2.319.1"
          #iam-role-arn: arn:aws:iam::851725546513:role/GitHub
          #aws-resource-tags: > # optional, requires additional permissions
          #  [
          #    {"Key": "Name", "Value": "ec2-github-runner"},
          #    {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
          #  ]
  deploy:
    name: Deploy
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    env:
      INFISICAL_UNIVERSAL_AUTH_CLIENT_ID: ${{ secrets.INFISICAL_UNIVERSAL_AUTH_CLIENT_ID }}
      INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET: ${{ secrets.INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET }}
      INFISICAL_PROJECT_ID: ${{ secrets.INFISICAL_PROJECT_ID }}
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851725546513:role/GitHub
          role-duration-seconds: 1800
          aws-region: us-east-1
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.12.0
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Deploy app
        run: |
          #echo $ENV_B64 | base64 -d > .env
          #source .env
          export NODE_OPTIONS=--max-old-space-size=32768
          export MIGRATE_PROD_CONFIRM=true
          chmod +x deploy.sh
          bash ./deploy.sh
          # pnpx sst unlock --stage production && pnpx sst deploy --stage production
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - deploy # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851725546513:role/GitHub
          role-duration-seconds: 1800
          aws-region: us-east-1
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
