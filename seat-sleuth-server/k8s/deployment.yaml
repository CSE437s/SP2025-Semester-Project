---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: seatsleuth
  labels:
    app: seatsleuth
spec:
  selector:
    matchLabels:
      app: seatsleuth
  replicas: 1
  template:
    metadata:
      labels:
        app: seatsleuth
    spec:
      containers:
        - image: docker.io/library/postgres:latest
          name: seatsleuth
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: seat-sleuth-password-12345
            - name: POSTGRES_USER
              value: seat-sleuth-user
          livenessProbe:
            tcpSocket:
              port: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: seatsleuth-db
spec:
  selector:
    app: seatsleuth-db
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seatsleuth-server
  labels:
    app: seatsleuth-server
spec:
  selector:
    matchLabels:
      app: seatsleuth-server
  replicas: 1
  template:
    metadata:
      labels:
        app: seatsleuth-server
    spec:
      containers:
        - image: seatsleuth:v1
          imagePullPolicy: Never
          name: seatsleuth
          ports:
            - containerPort: 4000
          env:
            - name: POSTGRES_USER
              value: seat-sleuth-user
            - name: POSTGRES_PASSWORD
              value: seat-sleuth-password-12345
            - name: POSTGRES_DB
              value: seat-sleuth
            - name: DATABASE_URL
              value: postgresql://seat-sleuth-user:seat-sleuth-password-12345@seatsleuth-db:5432/seat-sleuth
            - name: NODE_ENV
              value: production
            - name: CLIENT_URL
              value: http://localhost:5173
            - name: TM_BASE_URL #Look up Secrets in Kubernetes, we need a definition per secret env var. or just 1 as a store for secrets. create k8s secrets.yaml w/gitignore. deploy that, reference secrets in the cluster directly by name
              value: 'https://app.ticketmaster.com/discovery/v2/'
            - name: GMAIL_EMAIL
              value: 'seatsleuthauth@gmail.com'
            - name: GMAIL_PASSWORD
              value: '' #TODO: Secret here
            - name: SESSION_SECRET
              value: '' #TODO: Secret here
            - name: TM_API_KEY
              value: '' #TODO: Secret here

            # - name: APP_DATABASE__PORT #TODO: This was here originally, but I don't think it's needed
            #   value: '5432'
---
apiVersion: v1
kind: Service
metadata:
  name: seatsleuth
spec:
  type: LoadBalancer
  selector:
    app: seatsleuth
  ports:
    - port: 4000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: seat-sleuth-ingress
  # annotations:
  # nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: seat-sleuth
                port:
                  number: 4000
#Add a second ingress search for ngix ingress, regex replace we can do on it
