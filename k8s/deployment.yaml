# MongoDB StatefulSet Deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: project-draft-db
  labels:
    app: project-draft-db
spec:
  selector:
    matchLabels:
      app: project-draft-db
  replicas: 1
  template:
    metadata:
      labels:
        app: project-draft-db
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "admin"  # MongoDB root username
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "admin123"  # MongoDB root password
          livenessProbe:
            tcpSocket:
              port: 27017
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi  # Adjust storage size
        storageClassName: standard  # Adjust with your storage class name if needed

---
apiVersion: v1
kind: Service
metadata:
  name: project-draft-db
spec:
  selector:
    app: project-draft-db
  ports:
    - port: 5432  # MongoDB port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend
  labels:
    app: react-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      containers:
        - name: react-frontend
          image: react-frontend:v1  # Replace with your frontend image or use build context
          ports:
            - containerPort: 3000
          env:
            - name: REACT_APP_API_URL
              value: "http://fastapi-backend:8000"  # Backend service URL (Kubernetes service name)
---
apiVersion: v1
kind: Service
metadata:
  name: react-frontend
spec:
  selector:
    app: react-frontend
  ports:
    - protocol: TCP
      port: 80  # Expose on port 80 externally
      targetPort: 3000
  type: LoadBalancer  # Expose externally through LoadBalancer (can be ClusterIP in some cases)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-backend
  labels:
    app: fastapi-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-backend
  template:
    metadata:
      labels:
        app: fastapi-backend
    spec:
      containers:
        - name: fastapi-backend
          image: fastapi-backend:v1  # Replace with your backend image or use build context
          ports:
            - containerPort: 8000
          env:
            - name: MONGO_URI
              value: "mongodb://admin:admin123@project-draft-db:27017/events?retryWrites=true&w=majority"  # MongoDB URI
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-backend
spec:
  selector:
    app: fastapi-backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP  # Internal service exposed to other services in the cluster

---
# Ingress configuration to expose frontend externally
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: project-draft-ingress
spec:
  rules:
    - host: "localhost"  # Replace with your domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react-frontend
                port:
                  number: 80
